<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.App" />
        <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
        <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" />
        <PackageReference Include="VueCliMiddleware" Version="2.1.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\DAL\DAL.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <!-- _Layout.cshtml is generated by ClientApp weback
    This needs to execute before razor files are compiled
    Using the target ResolveTagHelperRazorGenerateInputs to detect this situation.

    For other targets see: C:\Program Files\dotnet\sdk\2.1.403\Sdks\Microsoft.NET.Sdk.Razor\build\netstandard2.0\Sdk.Razor.CurrentVersion.targets

    NOTE: npm run build - runs twice for some reason - so production build is protected by existence of $(ProjectDir)ClientApp\dist\published.txt
    If EXISTS $(ProjectDir)ClientApp\dist\published.txt then webpack publish will be skipped.
    -->

    <Target Name="PublishRunWebpack" BeforeTargets="ResolveTagHelperRazorGenerateInputs" Condition=" '$(Configuration)' == 'Release' And !Exists('$(ProjectDir)ClientApp\dist\published.txt') ">
        <Message Importance="high" Text="Publishing ClientApp to generate $(ProjectDir)Views\Shared\_Layout.cshtml" />

        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="copy /Y $(ProjectDir)ClientApp\vue.config.js $(ProjectDir)ClientApp\dist\published.txt" />
    </Target>

    <!-- Add ClientApp webpack output to publish output files. -->

    <Target Name="CopyPublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <Message Importance="high" Text="CopyPublishRunWebpack copying" />

        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

    <!-- Delete $(ProjectDir)ClientApp\dist\published.txt for next time publish occurs.
    NOTE: Manually delete $(ProjectDir)ClientApp\dist\published.txt if publish is cancelled.
    -->
    <Target Name="PostBuild" AfterTargets="AfterPublish" Condition=" '$(Configuration)' == 'Release' ">
        <Message Importance="high" Text="Cleaning up after publish" />
        <Exec Command="del $(ProjectDir)ClientApp\dist\published.txt" />
    </Target>

</Project>
